// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UDI_kodetest_revised.Data;

#nullable disable

namespace UDI_kodetest_revised.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250104234542_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UDI_kodetest_revised.Models.Entity.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etternavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalIdField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fødselsdato")
                        .HasColumnType("datetime2");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mellomnavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobilnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poststed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reisedokumentnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personer");
                });

            modelBuilder.Entity("UDI_kodetest_revised.Models.Entity.Sak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FullmektigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KontaktId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecNo")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Recno");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SakId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Sakid");

                    b.Property<bool>("SendtSms")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SøkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VedtakId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VedtaksId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FullmektigId");

                    b.HasIndex("KontaktId");

                    b.HasIndex("SøkerId");

                    b.HasIndex("VedtakId");

                    b.ToTable("Saker");
                });

            modelBuilder.Entity("UDI_kodetest_revised.Models.Entity.Vedtak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GyldigFra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GyldigTil")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vedtak");
                });

            modelBuilder.Entity("UDI_kodetest_revised.Models.Entity.Sak", b =>
                {
                    b.HasOne("UDI_kodetest_revised.Models.Entity.Person", "Fullmektig")
                        .WithMany()
                        .HasForeignKey("FullmektigId");

                    b.HasOne("UDI_kodetest_revised.Models.Entity.Person", "Kontakt")
                        .WithMany()
                        .HasForeignKey("KontaktId");

                    b.HasOne("UDI_kodetest_revised.Models.Entity.Person", "Søker")
                        .WithMany()
                        .HasForeignKey("SøkerId");

                    b.HasOne("UDI_kodetest_revised.Models.Entity.Vedtak", "Vedtak")
                        .WithMany()
                        .HasForeignKey("VedtakId");

                    b.Navigation("Fullmektig");

                    b.Navigation("Kontakt");

                    b.Navigation("Søker");

                    b.Navigation("Vedtak");
                });
#pragma warning restore 612, 618
        }
    }
}
